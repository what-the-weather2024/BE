name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  IMAGE_NAME: wtw-spring

jobs:
  build-docker-image-and-push:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    # 1. Java 17 세팅
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # 2. Spring Boot 환경변수 할당
    - name: Retrieve application properties
      env:
        APPLICATION_PROPERTIES: ${{ secrets.APPLICATION_PROPERTIES }} # 시크릿에 등록시킨 application.yml
      run: |
        touch ./src/main/resources/application.yml
        echo "${APPLICATION_PROPERTIES}" > ./src/main/resources/application.yml

    # 3. Spring Boot 애플리케이션 빌드
    - name: Build with Gradle
      run: ./gradlew clean build -x test

    # 4. DockerHub 로그인
    - name: DockerHub login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    # 5. Docker 이미지 빌드
    - name: Build Docker image
      run: docker build -t chancehee/${{ env.IMAGE_NAME }}:latest .

    # 6. DockerHub 이미지 푸시
    - name: Push Docker image to DockerHub
      run: docker push chancehee/${{ env.IMAGE_NAME }}:latest
